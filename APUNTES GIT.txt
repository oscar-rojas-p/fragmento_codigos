****"Q" detiene el terminal de git cuando esta ejecutandose algo****

"directorio <> carpeta"
"HEAD -> cabezera de los commits"

repositorio local(area donde se trabaja)	->	repositorio temporal	->	repositorio remoto

git config --list		---muestra la lista de la configuracion del git en el sistema
git config --global user.name "Tu nombre"		----cambia el nomber de usuario que se usara de manera global en git 
git config --global user.email "tuemail@tudominio.com"		----cambia el email de usuario que se usara de manera global en git 

git log 	---muestra los commits (para que ya no muestre mas comits presionar "Q")
git log -2 	---muestra los 2 ultimos commits 

git status		---muestra el estado de los archivos y si es que hay alguno que esta modificado se muestra de rojo

git add . 	--- añade TODOS los archivos al repositorio temporal
git add "archivo.html"	--- añade solo archivo.html al repositorio temporal
git reset .	---regresa TODOS los cambios del repositorio temporal al repositorio local
git reset "archivo.html"	---regresa solo archivo.html los cambios del repositorio temporal al repositorio local 

git restore .	---descarta todos los cambios que se hayan hecho y que ya no se quieren ver en el repositorio local
git restore "archivo.html"		---descarta los cambios que se hayan hecho en "archivo.html" y que ya no se quieren ver en el repositorio local

git commit -m "nombre del commit que se subira"		---	realiza un commit de todos los archivos guardados con el git add para luego subirlo al repositorio remoto con git push

git fetch
git pull	---trae todo de la rama actual
git pull origin branchName	---trae todo de la rama branchName al repositorio local

git push	---sube todos los commits que se hayan realizado al repositorio remoto(GitHub)



///////////////////////TIPS QUE OFRECE GIT////////////////////////////////
Estos son comandos comunes de Git que se usan en varias situaciones:

iniciar un área de trabajo (ver también: tutorial de ayuda de git)
   clone: Clonar un repositorio en un nuevo directorio
   init: Crea un repositorio Git vacío o reinicializa uno existente

trabajar en el cambio actual (ver también: ayuda de git todos los días)
   add: Agregar contenido de archivo al índice
   mv: Mover o cambiar el nombre de un archivo, un directorio o un enlace simbólico
   restore: Restaurar archivos de árbol de trabajo
   rm: Eliminar archivos del árbol de trabajo y del índice

examinar el historial y el estado (ver también: revisiones de ayuda de git)
   bisect: Utilice la búsqueda binaria para encontrar la confirmación que introdujo un error
   diff: Muestra cambios entre commits, commit y árbol de trabajo, etc.
   grep: Imprime líneas que coinciden con un patrón
   log: Mostrar registros de confirmación
   show: Mostrar varios tipos de objetos
   status: Mostrar el estado del árbol de trabajo

crecer, marcar y modificar su historia común
   branch: Enumerar, crear o eliminar sucursales
   commit: Registrar cambios en el repositorio
   merge: Unir dos o más historias de desarrollo juntas
   rebase: Reapply confirma sobre otro consejo base
   reset: Restablecer HEAD actual al estado especificado
   switch: Cambiar de rama
   tag: Crear, enumerar, eliminar o verificar un objeto de etiqueta firmado con GPG

colaborar (ver también: flujos de trabajo de ayuda de git)
   fetch: Descargar objetos y referencias de otro repositorio
   pull: Fetch e integre con otro repositorio o una sucursal local
   push: Actualizar referencias remotas junto con objetos asociados
//////////////////////////////////////////////////////////////////////////////